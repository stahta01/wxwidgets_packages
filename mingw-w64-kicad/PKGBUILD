# Maintainer:  Alexey Pavlov <alexpux@gmail.com>
# Maintainer:  Tim Stahlhut <stahta01@gmail.com>

# meta wants to download the other packages which waste time during
# development; but, needs to be yes after development is over.
_build_meta=yes

_realname=kicad
_wx_basever=3.1
pkgbase=mingw-w64-${_realname}
pkgname=(
  "${MINGW_PACKAGE_PREFIX}-${_realname}"
  $([[ "$_build_meta" == "yes" ]] && echo "${MINGW_PACKAGE_PREFIX}-${_realname}-meta")
)
pkgver=6.0.4
pkgrel=1
pkgdesc="Software for the creation of electronic schematic diagrams and printed circuit board artwork (mingw-w64)"
arch=(any)
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64')
url="https://www.kicad.org/"
license=("GPLv3+")
groups=("${MINGW_PACKAGE_PREFIX}-eda")
options=('!strip')
#if [[ "${MSYSTEM}" == "UCRT64" ]]; then
  #options+=('debug')
#else
  options+=('!debug')
#fi
depends=(
  "${MINGW_PACKAGE_PREFIX}-boost"
  "${MINGW_PACKAGE_PREFIX}-curl"
  "${MINGW_PACKAGE_PREFIX}-glew"
  "${MINGW_PACKAGE_PREFIX}-glm"
  "${MINGW_PACKAGE_PREFIX}-ngspice"
  "${MINGW_PACKAGE_PREFIX}-python"
  "${MINGW_PACKAGE_PREFIX}-wxmsw${_wx_basever}"
  "${MINGW_PACKAGE_PREFIX}-openssl"
  "${MINGW_PACKAGE_PREFIX}-freeglut"
  "${MINGW_PACKAGE_PREFIX}-zlib"
  $([[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]] && echo "${MINGW_PACKAGE_PREFIX}-opencascade")
  "${MINGW_PACKAGE_PREFIX}-cairo"
)
makedepends=(
  'git' 'make'
  "${MINGW_PACKAGE_PREFIX}-cmake"
  "${MINGW_PACKAGE_PREFIX}-cc"
  "${MINGW_PACKAGE_PREFIX}-doxygen"
  "${MINGW_PACKAGE_PREFIX}-pkg-config"
  "${MINGW_PACKAGE_PREFIX}-swig"
)
source=(
  '002-cmake-fixes-for-MINGW-CLANG.patch'
  '003-code-fixes-for-GNUC-CLANG.patch'
  '005-rewrite-kiwin32_rc_for_clang.patch'
  '006-manifest-remove-win10-11-manifest-support.patch'
  "${_realname}-${pkgver}.tar.gz"::"https://gitlab.com/kicad/code/kicad/-/archive/${pkgver}/kicad-${pkgver}.tar.gz"
)
sha256sums=('45c672d20ae9badb9591f39cffc0191d6eb9a86ebbef53d43475954ffb89fe27'
            'd8d5f4bdd0aa6d8a907710c523f6f95840636cb2ef69e5275c6ed4966f134353'
            'e03dbb58409145c8fb54991d8259f14bc0ba6b21abca24f9b914ec354c9df89c'
            '550397b8d2ba66b924933020e409e868d3e4b2352a235f329798bc631b9fd28f'
            '45d351be84b582821d8a9a590bab5ccd53f9c477950c97295634f209772d5c33')
_doc=("ca" "de" "en" "es" "fr" "id" "it" "ja" "nl" "pl" "ru" "zh")
_sub=("footprints" "symbols" "templates" "packages3D")

prepare() {
  cd ${_realname}-${pkgver}

  patch -p1 -i "${srcdir}"/002-cmake-fixes-for-MINGW-CLANG.patch
  patch -p1 -i "${srcdir}"/003-code-fixes-for-GNUC-CLANG.patch
  patch -p1 -i "${srcdir}"/005-rewrite-kiwin32_rc_for_clang.patch
  patch -p1 -i "${srcdir}"/006-manifest-remove-win10-11-manifest-support.patch
}

build() {
  cd "${srcdir}"
  msg2 "Build kicad"
  [[ -d build-${MSYSTEM} ]] && rm -rf build-${MSYSTEM}
  mkdir -p build-${MSYSTEM} && cd build-${MSYSTEM}

  local -a extra_config
  if check_option "debug" "y"; then
    extra_config+=( -DCMAKE_BUILD_TYPE=Debug )
  else
    extra_config+=( -DCMAKE_BUILD_TYPE=Release )
  fi

  if [[ ${MINGW_PACKAGE_PREFIX} != *-clang-aarch64* ]]; then
    extra_config+=( -DOCC_INCLUDE_DIR=${MINGW_PREFIX}/include/opencascade )
  fi

  if [[ ${MINGW_PACKAGE_PREFIX} != *-clang-* ]]; then
    export CXXFLAGS="-pipe"
    extra_config+=( -DCMAKE_CXX_FLAGS_RELEASE:STRING="-O0 -DNDEBUG" )
  fi

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=;DCMAKE_PREFIX_PATH=;DEFAULT_INSTALL_PATH=" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -G "MSYS Makefiles" \
    -DCMAKE_PREFIX_PATH=${MINGW_PREFIX} \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    "${extra_config[@]}" \
    -DCMAKE_BUILD_TYPE=Release \
    -DDEFAULT_INSTALL_PATH=${MINGW_PREFIX} \
    -DwxWidgets_CONFIG_EXECUTABLE=${MINGW_PREFIX}/bin/wx-config-${_wx_basever} \
    -DKICAD_USE_OCC="$( [[ ${MINGW_PACKAGE_PREFIX} == *-clang-* ]] && echo "OFF" || echo "ON" )" \
    -DKICAD_SCRIPTING_WXPYTHON=OFF \
    -DKICAD_BUILD_I18N=ON \
    -DPYTHON_EXECUTABLE=${MINGW_PREFIX}/bin/python.exe \
    -DPYTHON_INCLUDE_DIR=$(${MINGW_PREFIX}/bin/python.exe -c "from sysconfig import get_paths as gp; print(gp()[\"include\"])") \
    -DPYTHON_ROOT_DIR=${MINGW_PREFIX} \
    ../${_realname}-${pkgver}

  make VERBOSE=1
}

for _doclang in ${_doc[@]}; do _doc_pkg+=("\"${MINGW_PACKAGE_PREFIX}-${_realname}-doc-${_doclang}: Documentation for KiCad (mingw-w64)\""); done
for _feature in ${_sub[@]}; do _sub_pkg+=("\"${MINGW_PACKAGE_PREFIX}-${_realname}-${_feature}\""); done

eval "package_${MINGW_PACKAGE_PREFIX}-${_realname}() {

  msg2 \"Package kicad\"
  optdepends+=(${_doc_pkg[@]} ${_sub_pkg[@]})
  conflicts=(${MINGW_PACKAGE_PREFIX}-${_realname}-git)
  replaces=(${MINGW_PACKAGE_PREFIX}-${_realname}-git)

  cd \${srcdir}/build-${MSYSTEM}
  make DESTDIR=\${pkgdir} install
}"

eval "package_${MINGW_PACKAGE_PREFIX}-${_realname}-meta() {
  depends=(${MINGW_PACKAGE_PREFIX}-${_realname}
           ${_sub_pkg[@]})
}"
